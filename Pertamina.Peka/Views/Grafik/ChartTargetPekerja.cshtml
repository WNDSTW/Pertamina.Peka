@model IEnumerable<Pertamina.Peka.Models.Grafik>
@{
    ViewBag.Title = "Chart Target Pekerja";
}

<div class="row" style="margin-top:40px; align-self:center">
    <div class="col-md-4">
        <select id="filterChart" class="form-control" onchange="loadChart()">
            <option value=1>Januari</option>
            <option value=2>Februari</option>
            <option value=3>Maret</option>
            <option value=4>April</option>
            <option value=5>Mei</option>
            <option value=6>Juni</option>
            <option value=7>Juli</option>
            <option value=8>Agustus</option>
            <option value=9>September</option>
            <option value=10>Oktober</option>
            <option value=11>November</option>
            <option value=12>Desember</option>
        </select>
    </div>
    <div class="col-md-4">
        <select id="filterChart2" class="form-control" onchange="loadChart()">
            @foreach (var item in Model)
            {
                <option value=@item.Tahun>@item.Tahun</option>
            }
        </select>
    </div>
</div>
<div class="row" style="margin-top:40px">
    <div class="text-center">
        @*<div style="">*@
        <canvas id="Chart1"></canvas>
        @*</div>*@
    </div>
</div>
<script>
    $(function () {
        //loadChart();
        //$("#filterChart").bind("change", function () {
        //    LoadChart();
        //});
    });
    function loadChart() {
                
        var    dataAktif;
        var    dataPasif;
       
        var grafik = {
            Bulan: $('#filterChart').val(),
            Tahun: $('#filterChart2').val()
        };
        $.ajax({
            type: "POST",
            url: "/Grafik/getTargetPekerja",
            data: JSON.stringify(grafik),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                //alert(response)
                if (response != null) {
                    var speedCanvas = document.getElementById("Chart1");
                    Chart.defaults.global.defaultFontFamily = "Lato";
                    Chart.defaults.global.defaultFontSize = 18;
                    //    ChartData.dataAktif.push(result[x].PegawaiAktif);
                    //    ChartData.dataPasif.push(result[x].Target);

                    for (x = 0; x < response.length; x++) {                       
                        dataAktif = JSON.stringify( response[x].PegawaiAktif);
                        dataPasif = JSON.stringify(response[x].PegawaiPasif);
                        //alert(JSON.stringify(response[x].PegawaiPasif))
                        //alert(JSON.stringify(response[x].PegawaiAktif))
                        
                    }

                   
                    var speedData = {
                        labels: ["Telah Mengirim Peka", "Belum Mengirim Peka"],
                        datasets: [{
                            label: "Realisasi Bulan",
                            backgroundColor: ["#ff6384", "#119966"],
                            hoverBackgroundColor: ["#FCCE56", "#FCCE56"],
                            borderWidth: 1,
                            data: [dataAktif, dataPasif],
                        }]
                    };

                    var chartOptions1 = {
                        responsive: true,
                        title: {
                            display: true,
                            text: 'Jumlah Pekerja Memenuhi Target'
                        },
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                boxWidth: 80,
                                fontColor: 'black'
                            }
                        }
                    };

                    var lineChart = new Chart(speedCanvas, {
                        type: 'doughnut',
                        data: speedData,
                        options: chartOptions1,
                        //tooltips: {
                        //    callbacks: {
                        //        label: function (tooltipItem, data) {
                        //            var dataset = data.datasets[tooltipItem.datasetIndex];
                        //            var meta = dataset._meta[Object.keys(dataset._meta)[0]];
                        //            var total = meta.total;
                        //            var currentValue = dataset.data[tooltipItem.index];
                        //            var percentage = parseFloat((currentValue / total * 100).toFixed(1));
                        //            return currentValue + ' (' + percentage + '%)';
                        //        },
                        //        title: function (tooltipItem, data) {
                        //            return data.labels[tooltipItem[0].index];
                        //        }
                        //    }
                        //}
                    });
                }
                
            }
        })
    }
    

</script>



